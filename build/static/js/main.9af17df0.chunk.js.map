{"version":3,"sources":["components/component-styles/GameCanvas.module.css","components/component-styles/ColorComponent.module.css","components/component-styles/CurrentColor.module.css","components/component-styles/PaletteArea.module.css","components/component-styles/TargetMatch.module.css","components/component-styles/ScoreDisplay.module.css","color-constants.js","components/ColorComponent.js","actions/palette-actions.js","components/ComponentBar.js","actions/color-actions.js","components/PaletteArea.js","components/TargetMatch.js","actions/game-actions.js","components/CurrentColor.js","components/ScoreDisplay.js","components/GameCanvas.js","App.js","serviceWorker.js","reducers/palette.js","reducers/colors.js","reducers/game.js","reducers/rootReducer.js","index.js"],"names":["module","exports","text","paletteArea","container","component","light","currentColor","target","RED","name","hex","YELLOW","BLUE","WHITE","BLACK","BASE_COLORS","MIX_COLORS","components","TOTAL_LEVELS","length","ColorComponent","handleClick","_this","props","onClick","color","_this$props$color","this","style","backgroundColor","classes","s","react_default","a","createElement","className","React","Component","paletteActions","addColor","type","removeColor","ComponentBar","map","item","index","Fragment","key","ColorComponent_ColorComponent","propTypes","PropTypes","object","isRequired","connect","state","Object","objectSpread","dispatch","colorActions","initializeColors","colors","concat","toConsumableArray","PaletteArea","palette","byName","TargetMatch","PureComponent","gameActions","initializeGame","nextLevel","endGame","CurrentColor","checkColor","current_color","console","log","game","level","targetColor","assertThisInitialized","_this2","setTimeout","getColor","_this$props","all","c","isMatch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","includes","err","return","ScoreDisplay","score","GameCanvas","_this$props$game","hasWon","color_name","components_ComponentBar","components_ScoreDisplay","TargetMatch_TargetMatch","components_PaletteArea","components_CurrentColor","components_GameCanvas","Boolean","window","location","hostname","match","arguments","action","Set","Array","from","values","delete","allColors","push","shuffle","j","x","i","Math","floor","random","combineReducers","store","createStore","rootReducer","applyMiddleware","logger","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9af17df0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"GameCanvas_text__2H15u\",\"paletteArea\":\"GameCanvas_paletteArea__1LwcT\",\"container\":\"GameCanvas_container__2gfFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ColorComponent_component__1_lzE\",\"light\":\"ColorComponent_light__zYYWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentColor\":\"CurrentColor_currentColor__1gglJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"PaletteArea_text__2f65t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"target\":\"TargetMatch_target__38XLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ScoreDisplay_text__2xNBy\"};","export const NO_MATCH_COLOR = \"#343a40\";\n\nexport const RED = { name: \"red\", hex: \"#dd2c00\" };\nexport const YELLOW = { name: \"yellow\", hex: \"#ffeb3b\" };\nexport const BLUE = { name: \"blue\", hex: \"#2962ff\" };\nexport const WHITE = { name: \"white\", hex: \"#FFFFFF\" };\nexport const BLACK = { name: \"black\", hex: \"#000000\" };\n\nexport const BASE_COLORS = [RED, YELLOW, BLUE, WHITE, BLACK];\n\nexport const ORANGE = {\n  name: \"orange\",\n  hex: \"#ff9800\",\n  components: [YELLOW, RED]\n};\n\nexport const PURPLE = {\n  name: \"purple\",\n  hex: \"#673ab7\",\n  components: [RED, BLUE]\n};\n\nexport const GREEN = {\n  name: \"green\",\n  hex: \"#4caf50\",\n  components: [YELLOW, BLUE]\n};\n\nexport const LIGHT_ORANGE = {\n  name: \"light orange\",\n  hex: \"#ffcc80\",\n  components: [RED, YELLOW, WHITE]\n};\nexport const LIGHT_PURPLE = {\n  name: \"light purple\",\n  hex: \"#b39ddb\",\n  components: [BLUE, RED, WHITE]\n};\nexport const LIGHT_GREEN = {\n  name: \"light green\",\n  hex: \"#b2dfdb\",\n  components: [BLUE, YELLOW, WHITE]\n};\n\nexport const LIGHT_RED = {\n  name: \"light red\",\n  hex: \"#ffcdd2\",\n  components: [RED, WHITE]\n};\nexport const LIGHT_YELLOW = {\n  name: \"light yellow\",\n  hex: \"#fff9c4\",\n  components: [YELLOW, WHITE]\n};\nexport const LIGHT_BLUE = {\n  name: \"light blue\",\n  hex: \"#b3e5fc\",\n  components: [BLUE, WHITE]\n};\nexport const GREY = {\n  name: \"grey\",\n  hex: \"#bdbdbd\",\n  components: [BLACK, WHITE]\n};\n\nexport const DARK_ORANGE = {\n  name: \"dark orange\",\n  hex: \"#ff6d00\",\n  components: [RED, YELLOW, BLACK]\n};\nexport const DARK_PURPLE = {\n  name: \"dark purple\",\n  hex: \"#4527a0\",\n  components: [BLUE, RED, BLACK]\n};\nexport const DARK_GREEN = {\n  name: \"dark green\",\n  hex: \"#004d40\",\n  components: [BLUE, YELLOW, BLACK]\n};\n\nexport const DARK_RED = {\n  name: \"dark red\",\n  hex: \"#721f05\",\n  components: [RED, BLACK]\n};\nexport const DARK_YELLOW = {\n  name: \"dark yellow\",\n  hex: \"#bcaa21\",\n  components: [YELLOW, BLACK]\n};\nexport const DARK_BLUE = {\n  name: \"dark blue\",\n  hex: \"#1a237e\",\n  components: [BLUE, BLACK]\n};\n\nexport const MIX_COLORS = [\n  ORANGE,\n  PURPLE,\n  GREEN,\n  LIGHT_ORANGE,\n  LIGHT_PURPLE,\n  LIGHT_GREEN,\n  LIGHT_RED,\n  LIGHT_YELLOW,\n  LIGHT_BLUE,\n  GREY,\n  DARK_ORANGE,\n  DARK_PURPLE,\n  DARK_GREEN,\n  DARK_RED,\n  DARK_YELLOW,\n  DARK_BLUE\n];\n\nexport const TOTAL_LEVELS = MIX_COLORS.length + BASE_COLORS.length;\n","import React from \"react\";\nimport s from \"./component-styles/ColorComponent.module.css\";\nimport PropTypes from \"prop-types\";\nimport { BLACK, WHITE, YELLOW } from \"../color-constants\";\n\nexport default class ColorComponent extends React.Component {\n  handleClick = () => {\n    this.props.onClick(this.props.color);\n  };\n  render() {\n    let { name, hex } = this.props.color;\n    let style =\n      name === BLACK.name\n        ? { backgroundColor: hex, color: WHITE.hex }\n        : { backgroundColor: hex };\n    let classes =\n      name === WHITE.name || name === YELLOW.name ? s.light : s.component;\n    return (\n      <div style={style} className={classes} onClick={this.handleClick}>\n        <div className=\"d-flex flex-column justify-content-center h-100\">\n          <span>{name}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nColorComponent.propTypes = {\n  color: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","// Define action constants\nexport const ADD_TO_PALETTE = \"ADD_TO_PALETTE\";\nexport const REMOVE_FROM_PALETTE = \"REMOVE_FROM_PALETTE\";\n\nlet paletteActions = {\n  addColor: color => ({\n    type: ADD_TO_PALETTE,\n    color: color\n  }),\n\n  removeColor: color => ({\n    type: REMOVE_FROM_PALETTE,\n    color: color\n  })\n};\n\nexport default paletteActions;\n","import React from \"react\";\nimport { BASE_COLORS } from \"../color-constants\";\nimport ColorComponent from \"./ColorComponent\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport paletteActions from \"../actions/palette-actions\";\n\nclass ComponentBar extends React.Component {\n  render() {\n    return BASE_COLORS.map((item, index) => (\n      <React.Fragment key={index}>\n        <ColorComponent color={item} onClick={this.props.addColor} />\n        <br />\n      </React.Fragment>\n    ));\n  }\n}\n\nColorComponent.propTypes = {\n  color: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addColor: color => dispatch(paletteActions.addColor(color))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ComponentBar);\n","import { MIX_COLORS, BASE_COLORS } from \"../color-constants\";\n\n// Define action constants\nexport const INITIALIZE_COLORS = \"INITIALIZE_COLORS\";\n\nlet colorActions = {\n  initializeColors: () => ({\n    type: INITIALIZE_COLORS,\n    colors: [...MIX_COLORS, ...BASE_COLORS]\n  })\n};\n\nexport default colorActions;\n","import React from \"react\";\nimport s from \"./component-styles/PaletteArea.module.css\";\nimport ColorComponent from \"./ColorComponent\";\nimport { connect } from \"react-redux\";\nimport paletteActions from \"../actions/palette-actions\";\nimport colorActions from \"../actions/color-actions\";\n\nclass PaletteArea extends React.Component {\n  componentDidMount() {\n    this.props.initializeColors();\n  }\n  render() {\n    let { palette } = this.props;\n    return palette.length === 0 ? (\n      <p className={`${s.text} text-muted pt-5`}>( Select colors to begin )</p>\n    ) : (\n      palette.map((item, index) => (\n        <React.Fragment key={index}>\n          {palette.length > 1 && index >= 1 && (\n            <span className=\"text-light display-4\">+</span>\n          )}\n          <ColorComponent\n            color={this.props.colors.byName[item]}\n            onClick={this.props.removeColor}\n          />\n        </React.Fragment>\n      ))\n    );\n  }\n}\n\nPaletteArea.propTypes = {};\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeColor: color => dispatch(paletteActions.removeColor(color)),\n  initializeColors: () => dispatch(colorActions.initializeColors())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PaletteArea);\n","import React from \"react\";\nimport s from \"./component-styles/TargetMatch.module.css\";\nimport PropTypes from \"prop-types\";\nimport { BLACK, WHITE } from \"../color-constants\";\n\nexport default class TargetMatch extends React.PureComponent {\n  handleClick = () => {\n    this.props.onClick(this.props.color);\n  };\n  render() {\n    let { name, hex } = this.props.color;\n    let style =\n      name === BLACK.name\n        ? { backgroundColor: hex, color: WHITE.hex }\n        : { backgroundColor: hex };\n    return (\n      <div style={style} className={s.target}>\n        <div className=\" d-flex flex-column justify-content-center h-100\">\n          <span className=\"text-uppercase h3 font-weight-light\">{name}?</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nTargetMatch.propTypes = {\n  color: PropTypes.object.isRequired\n  //   onClick: PropTypes.func.isRequired\n};\n","// Define action constants\nexport const INITIALIZE_GAME = \"INITIALIZE_GAME\";\nexport const NEXT_LEVEL = \"NEXT_LEVEL\";\nexport const END_GAME = \"END_GAME\";\n\nlet gameActions = {\n  initializeGame: () => ({\n    type: INITIALIZE_GAME\n  }),\n\n  nextLevel: () => ({\n    type: NEXT_LEVEL\n  }),\n\n  endGame: () => ({ type: END_GAME })\n};\n\nexport default gameActions;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport s from \"./component-styles/CurrentColor.module.css\";\nimport paletteActions from \"../actions/palette-actions\";\nimport colorActions from \"../actions/color-actions\";\nimport { BLACK, WHITE, NO_MATCH_COLOR, TOTAL_LEVELS } from \"../color-constants\";\nimport gameActions from \"../actions/game-actions\";\nimport PropTypes from \"prop-types\";\n\nclass CurrentColor extends React.Component {\n  checkColor = current_color => {\n    console.log(this.props.game.level);\n    console.log(TOTAL_LEVELS);\n    if (current_color.name === this.props.targetColor.name) {\n      if (this.props.game.level < TOTAL_LEVELS - 1) {\n        let _this = this;\n        setTimeout(function() {\n          _this.props.nextLevel();\n        }, 750);\n      } else {\n        this.props.endGame();\n      }\n    }\n  };\n\n  getColor = () => {\n    let { palette, colors } = this.props;\n    let { all } = colors;\n    if (palette.length === 1) {\n      // return this.props.colors.byName[palette[0]];\n      let name = palette[0];\n      this.checkColor(this.props.colors.byName[name]);\n      return this.props.colors.byName[name];\n    } else if (palette.length > 1) {\n      let hasMatch = false;\n      for (let c in all) {\n        if (!hasMatch) {\n          let color = colors.byName[colors.all[c]];\n          if (color.components && color.components.length === palette.length) {\n            let isMatch = true;\n            for (let c of color.components) {\n              if (!palette.includes(c.name)) isMatch = false;\n            }\n            if (isMatch) {\n              this.checkColor(color);\n              return color;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  render() {\n    let name = \"No match!\";\n    let hex = NO_MATCH_COLOR;\n    let color = this.getColor();\n\n    if (color) {\n      name = color.name;\n      hex = color.hex;\n    }\n    let style =\n      name === BLACK.name\n        ? { backgroundColor: hex, color: WHITE.hex }\n        : { backgroundColor: hex };\n\n    return (\n      <div className={s.currentColor} style={style}>\n        {color ? (\n          <div className=\"d-flex flex-column justify-content-center h-100\">\n            <span className=\"text-uppercase h3 font-weight-light text-center\">\n              {name}\n            </span>\n          </div>\n        ) : (\n          <div\n            className={`${\n              s.currentColor\n            } text-uppercase h3 text-light font-weight-light text-center`}\n          >\n            <span>{name}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentColor.propTypes = {\n  targetColor: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  colors: state.colors,\n  palette: state.palette,\n  game: state.game\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeColor: color => dispatch(paletteActions.removeColor(color)),\n  initializeColors: () => dispatch(colorActions.initializeColors()),\n  nextLevel: () => dispatch(gameActions.nextLevel()),\n  endGame: () => dispatch(gameActions.endGame())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrentColor);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./component-styles/ScoreDisplay.module.css\";\n\nfunction ScoreDisplay(props) {\n  let { score, level } = props;\n  return (\n    <div className=\"ml-auto text-light\">\n      <span className={s.text}>\n        Score:<span className=\"text-right float-right ml-2\">{score}</span>\n        <br />\n        Level: <span className=\"text-right float-right ml-2\">{level}</span>\n      </span>\n    </div>\n  );\n}\n\nexport default ScoreDisplay;\n\nScoreDisplay.propTypes = {\n  score: PropTypes.number.isRequired,\n  level: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport s from \"./component-styles/GameCanvas.module.css\";\nimport ComponentBar from \"./ComponentBar\";\nimport PaletteArea from \"./PaletteArea\";\nimport TargetMatch from \"./TargetMatch\";\nimport CurrentColor from \"./CurrentColor\";\nimport paletteActions from \"../actions/palette-actions\";\nimport colorActions from \"../actions/color-actions\";\nimport gameActions from \"../actions/game-actions\";\nimport { connect } from \"react-redux\";\nimport ScoreDisplay from \"./ScoreDisplay\";\n\nclass GameCanvas extends React.Component {\n  render() {\n    let { score, level, hasWon } = this.props.game;\n    let color_name = this.props.colors.all[level];\n    let color = this.props.colors.byName[color_name];\n\n    return (\n      <div className={`${s.container} container mt-5 p-5 bg-dark`}>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <ComponentBar />\n          </div>\n\n          {!hasWon ? (\n            <div className=\"col-9 d-flex flex-column justify-content-between\">\n              <ScoreDisplay level={level} score={score} />\n              <div>\n                <h1 className={`${s.text} text-light h3 font-weight-light`}>\n                  Can you make...\n                </h1>\n                <TargetMatch color={color} />\n              </div>\n\n              <div className={`${s.paletteArea} text-center`}>\n                <PaletteArea />\n              </div>\n              <div>\n                <h1 className=\"text-center text-light display-4\">=</h1>\n                <CurrentColor targetColor={color} />\n              </div>\n            </div>\n          ) : (\n            <div className=\"col-9 d-flex flex-column\">\n              <ScoreDisplay level={level} score={score} />\n              <div className=\"text-center h-100 d-flex flex-column justify-content-center\">\n                <div className=\"mb-5 pb-3\">\n                  <h1 className={`${s.text} text-light text-center`}>\n                    You won!\n                  </h1>\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={this.props.initializeGame}\n                  >\n                    Play again?\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nGameCanvas.propTypes = {};\n\nconst mapStateToProps = state => ({\n  colors: state.colors,\n  palette: state.palette,\n  game: state.game\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeColor: color => dispatch(paletteActions.removeColor(color)),\n  initializeColors: () => dispatch(colorActions.initializeColors()),\n  initializeGame: () => dispatch(gameActions.initializeGame())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameCanvas);\n","import React from \"react\";\nimport GameCanvas from \"./components/GameCanvas\";\nimport colorActions from \"./actions/color-actions\";\nimport { connect } from \"react-redux\";\n\nconst App = props => {\n  if (!props.colors.all) {\n    props.initializeColors();\n  }\n  return <GameCanvas />;\n};\n\nApp.propTypes = {};\n\nconst mapStateToProps = state => ({\n  colors: state.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  initializeColors: () => dispatch(colorActions.initializeColors())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_TO_PALETTE,\n  REMOVE_FROM_PALETTE\n} from \"../actions/palette-actions\";\n\nimport { NEXT_LEVEL, INITIALIZE_GAME } from \"../actions/game-actions\";\n\nconst palette = (state = [], action) => {\n  let colors = undefined;\n  switch (action.type) {\n    case ADD_TO_PALETTE:\n      colors = new Set([...state, action.color.name]);\n      return Array.from(colors.values());\n    case REMOVE_FROM_PALETTE:\n      colors = new Set([...state]);\n      colors.delete(action.color.name);\n      return Array.from(colors.values());\n    case NEXT_LEVEL:\n    case INITIALIZE_GAME:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default palette;\n","import { INITIALIZE_COLORS } from \"../actions/color-actions\";\n\nconst colors = (state = {}, action) => {\n  switch (action.type) {\n    case INITIALIZE_COLORS:\n      let byName = {};\n      let allColors = [];\n\n      for (let color of action.colors) {\n        let name = color.name;\n        byName[name] = color;\n        allColors.push(name);\n      }\n      return { byName: byName, all: shuffle([...allColors]) };\n    default:\n      return state;\n  }\n};\n\nexport default colors;\n\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n","import { INITIALIZE_GAME, NEXT_LEVEL, END_GAME } from \"../actions/game-actions\";\n\nconst game = (state = {}, action) => {\n  switch (action.type) {\n    case INITIALIZE_GAME:\n      return { score: 0, level: 0, hasWon: false };\n    case NEXT_LEVEL:\n      return { ...state, score: state.score + 10, level: state.level + 1 };\n    case END_GAME:\n      return { ...state, hasWon: true };\n    default:\n      return state;\n  }\n};\n\nexport default game;\n","import { combineReducers } from \"redux\";\nimport palette from \"./palette\";\nimport colors from \"./colors\";\nimport game from \"./game\";\n\nexport default combineReducers({ palette, colors, game });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { logger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst initialState = { game: { level: 0, score: 0 } };\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(logger, thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}